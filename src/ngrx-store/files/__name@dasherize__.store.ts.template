import { createAction, createReducer, on, props, union } from '@ngrx/store';

// NOTE: State
export interface State {
  <%= camelize(name) %>: any | null;
}

export const initialState: State = {
  <%= camelize(name) %>: null,
};

// NOTE: Actions
export const save<%= classify(name) %> = createAction('[<%= classify(name) %>] save', props<{ <%= camelize(name) %>: any }>());

export const actions = { save<%= classify(name) %> };
const actionsUnion = union(actions);

// NOTE: Reducer
const <%= camelize(name) %>Reducer = createReducer(initialState, on(save<%= classify(name) %>, (state, { <%= camelize(name) %> }) => ({ ...state, <%= camelize(name) %> })));

export default function reducer(state: State, action: typeof actionsUnion): State {
  return <%= camelize(name) %>Reducer(state, action);
}

// NOTE: Selectors
export const featureName = '<%= camelize(name) %>';
